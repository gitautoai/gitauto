AWSTemplateFormatVersion: '2010-09-09'
Description: 'CloudFormation template to schedule a Lambda function using AWS EventBridge (formerly CloudWatch Events)'

Parameters:
  Email:
    Type: String
    Description: Email address to receive notifications
  LambdaFunctionName:
    Type: String
    Description: Name of the Lambda function to trigger
  LambdaFunctionArn:
    Type: String
    Description: ARN of the Lambda function to trigger
  LambdaFunctionRole:
    Type: String
    Description: Role of the Lambda function

Resources:
  # Lambda function is defined from AWS Console
  # https://us-west-1.console.aws.amazon.com/lambda/home?region=us-west-1#/functions

  # Define AWS EventBridge (CloudWatch Events) rule to schedule the Lambda function
  # You can see here: https://us-west-1.console.aws.amazon.com/events/home?region=us-west-1#/eventbus/default/rules/SchedulerEventRule
  SchedulerEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: SchedulerEventRule
      Description: "Schedule Lambda function to run every weekday at 0 AM UTC"
      ScheduleExpression: cron(0 0 ? * MON-FRI *)  # min hour day month day-of-week year
      State: ENABLED
      Targets:
        - Arn: !Ref LambdaFunctionArn
          Id: "LambdaFunctionTarget"

  # Permission for AWS EventBridge to invoke the Lambda function
  LambdaInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LambdaFunctionName
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt SchedulerEventRule.Arn

  # SNS Topic for sending notifications
  ErrorNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: LambdaErrorNotificationTopic

  # SNS Subscription to send notifications to an email
  ErrorNotificationSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      TopicArn: !Ref ErrorNotificationTopic
      Protocol: email
      Endpoint: !Ref Email

  # CloudWatch Alarm for Lambda function errors
  LambdaErrorAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: LambdaFunctionErrorAlarm
      AlarmDescription: Alarm for Lambda function errors
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum  # Total number of errors in each period
      Period: 300  # in seconds
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      AlarmActions:
        - !Ref ErrorNotificationTopic
      Dimensions:
        - Name: FunctionName
          Value: !Ref LambdaFunctionName

  # Create a SQS queue for coverage calculation
  # SQS stands for Simple Queue Service
  CoverageQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: coverage-analyzer
      VisibilityTimeout: 900  # 15 minutes

  # Add SQS permissions to the Lambda function
  SQSPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: SQSAccess
      PolicyDocument:
        Version: '2012-10-01'
        Statement:
          - Effect: Allow
            Action:
              - sqs:SendMessage
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
            Resource: !GetAtt CoverageQueue.Arn
      Roles:
        - !Ref LambdaFunctionRole

  # Add a SQS trigger to the Lambda function
  SQSTrigger:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt CoverageQueue.Arn
      FunctionName: !Ref LambdaFunctionName
      Enabled: true
