Run python -m pytest -r fE -x --cov-branch --cov=./ --cov-report=lcov:coverage/lcov.info
/opt/hostedtoolcache/Python/3.12.11/x64/lib/python3.12/site-packages/pytest_asyncio/plugin.py:217: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))

=================================== FAILURES ===================================
_____ TestShouldTestFile.test_should_test_file_with_boolean_return_values ______

self = <test_should_test_file.TestShouldTestFile object at 0x7f44e0106780>
mock_evaluate_condition = <MagicMock name='evaluate_condition' id='139933788682048'>
sample_file_path = 'services/calculator.py'
sample_code_content = 'class Calculator:\n    def add(self, a, b):\n        return a + b'

    def test_should_test_file_with_boolean_return_values(
        self, mock_evaluate_condition, sample_file_path, sample_code_content
    ):
        """Test that function properly handles different boolean-like return values."""
        # Test with actual boolean True
        mock_evaluate_condition.return_value = True
        result = should_test_file(sample_file_path, sample_code_content)
        assert result is True
        assert isinstance(result, bool)
    
        # Test with actual boolean False
        mock_evaluate_condition.return_value = False
        result = should_test_file(sample_file_path, sample_code_content)
        assert result is False
        assert isinstance(result, bool)
    
        # Test with truthy values that should be converted to boolean
        for truthy_value in [1, "true", "yes", [1, 2, 3], {"key": "value"}]:
            mock_evaluate_condition.return_value = truthy_value
            result = should_test_file(sample_file_path, sample_code_content)
>           assert isinstance(result, bool)
E           assert False
E            +  where False = isinstance(1, bool)

utils/files/test_should_test_file.py:534: AssertionError

=========================== short test summary info ============================
FAILED utils/files/test_should_test_file.py::TestShouldTestFile::test_should_test_file_with_boolean_return_values - assert False
 +  where False = isinstance(1, bool)
!!!!!!!!!!!!!!!!!!!!!!!!!! stopping after 1 failures !!!!!!!!!!!!!!!!!!!!!!!!!!!
======= 1 failed, 2616 passed, 1 skipped, 1 warning in 78.37s (0:01:18) ========
Error: Process completed with exit code 1.